{"ast":null,"code":"class Api {\n  constructor(authToken) {\n    this.headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n    this.BASE_URL = \"/api/articles\";\n    this.authToken = authToken;\n  }\n\n  createHeaders() {\n    return this.authToken ? { ...this.headers,\n      Authorization: \"Bearer \" + this.authToken\n    } : this.headers;\n  }\n\n  async getAll() {\n    return await fetch('http://blogspringbootmysqlkotlin-env.eba-vpdedufk.ap-southeast-2.elasticbeanstalk.com/api/articles/', {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async getById(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async delete(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"DELETE\",\n      mode: \"no-cors\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async update(item) {\n    return await fetch(`${this.BASE_URL}/${item.id}`, {\n      method: \"PUT\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item)\n    });\n  }\n\n  async create(item) {\n    return await fetch(this.BASE_URL, {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item)\n    });\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/Users/nicholasang/Documents/blog/src/Api.js"],"names":["Api","constructor","authToken","headers","Accept","BASE_URL","createHeaders","Authorization","getAll","fetch","method","mode","getById","id","delete","update","item","body","JSON","stringify","create"],"mappings":"AACA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAIvBC,OAJuB,GAIb;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB;AAFR,KAJa;AAAA,SASvBC,QATuB,GAUrB,eAVqB;AACrB,SAAKH,SAAL,GAAiBA,SAAjB;AACD;;AAUDI,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKJ,SAAL,GACH,EACE,GAAG,KAAKC,OADV;AAEEI,MAAAA,aAAa,EAAE,YAAY,KAAKL;AAFlC,KADG,GAKH,KAAKC,OALT;AAMD;;AAEW,QAANK,MAAM,GAAG;AACb,WAAO,MAAMC,KAAK,CAAC,qGAAD,EAAwG;AACxHC,MAAAA,MAAM,EAAE,KADgH;AAExHC,MAAAA,IAAI,EAAE,SAFkH;AAGxHR,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAH+G,KAAxG,CAAlB;AAKD;;AAEY,QAAPM,OAAO,CAACC,EAAD,EAAK;AAChB,WAAO,MAAMJ,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGQ,EAAG,EAAxB,EAA2B;AAC3CH,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,IAAI,EAAE,SAFqC;AAG3CR,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAHkC,KAA3B,CAAlB;AAKD;;AAEW,QAANQ,MAAM,CAACD,EAAD,EAAK;AACf,WAAO,MAAMJ,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGQ,EAAG,EAAxB,EAA2B;AAC3CH,MAAAA,MAAM,EAAE,QADmC;AAE3CC,MAAAA,IAAI,EAAE,SAFqC;AAG3CR,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAHkC,KAA3B,CAAlB;AAKD;;AAEW,QAANS,MAAM,CAACC,IAAD,EAAO;AACjB,WAAO,MAAMP,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGW,IAAI,CAACH,EAAG,EAA7B,EAAgC;AAChDH,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,IAAI,EAAE,SAF0C;AAGhDR,MAAAA,OAAO,EAAE,KAAKG,aAAL,EAHuC;AAIhDW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAJ0C,KAAhC,CAAlB;AAMD;;AAEW,QAANI,MAAM,CAACJ,IAAD,EAAO;AACjB,WAAO,MAAMP,KAAK,CAAC,KAAKJ,QAAN,EAAgB;AAChCK,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAE,SAF0B;AAGhCR,MAAAA,OAAO,EAAE,KAAKG,aAAL,EAHuB;AAIhCW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAJ0B,KAAhB,CAAlB;AAMD;;AA9DO;;AAiEV,eAAehB,GAAf","sourcesContent":["\nclass Api {\n  constructor(authToken) {\n    this.authToken = authToken;\n  }\n\n  headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  };\n\n  BASE_URL =\n    \"/api/articles\";\n\n  createHeaders() {\n    return this.authToken\n      ? {\n          ...this.headers,\n          Authorization: \"Bearer \" + this.authToken,\n        }\n      : this.headers;\n  }\n\n  async getAll() {\n    return await fetch('http://blogspringbootmysqlkotlin-env.eba-vpdedufk.ap-southeast-2.elasticbeanstalk.com/api/articles/', {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async getById(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async delete(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"DELETE\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async update(item) {\n    return await fetch(`${this.BASE_URL}/${item.id}`, {\n      method: \"PUT\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item),\n    });\n  }\n\n  async create(item) {\n    return await fetch(this.BASE_URL, {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item),\n    });\n  }\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}