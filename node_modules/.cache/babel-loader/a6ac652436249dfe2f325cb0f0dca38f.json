{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\n\nvar createState = function () {\n  return {\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoading: false,\n    scriptLoaded: false\n  };\n};\n\nvar CreateScriptLoader = function () {\n  var state = createState();\n\n  var injectScriptTag = function (scriptId, doc, url, async, defer, callback) {\n    var scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = scriptId;\n    scriptTag.src = url;\n    scriptTag.async = async;\n    scriptTag.defer = defer;\n\n    var handler = function () {\n      scriptTag.removeEventListener('load', handler);\n      callback();\n    };\n\n    scriptTag.addEventListener('load', handler);\n\n    if (doc.head) {\n      doc.head.appendChild(scriptTag);\n    }\n  };\n\n  var load = function (doc, url, async, defer, delay, callback) {\n    var scriptTagInjection = function () {\n      return injectScriptTag(state.scriptId, doc, url, async, defer, function () {\n        state.listeners.forEach(function (fn) {\n          return fn();\n        });\n        state.scriptLoaded = true;\n      });\n    };\n\n    if (state.scriptLoaded) {\n      callback();\n    } else {\n      state.listeners.push(callback);\n\n      if (!state.scriptLoading) {\n        state.scriptLoading = true;\n\n        if (delay > 0) {\n          setTimeout(scriptTagInjection, delay);\n        } else {\n          scriptTagInjection();\n        }\n      }\n    }\n  }; // Only to be used by tests.\n\n\n  var reinitialize = function () {\n    state = createState();\n  };\n\n  return {\n    load: load,\n    reinitialize: reinitialize\n  };\n};\n\nvar ScriptLoader = CreateScriptLoader();\nexport { ScriptLoader };","map":{"version":3,"sources":["/Users/liuai/code/React-Portfolio-Blog-Client/node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader.js"],"names":["uuid","createState","listeners","scriptId","scriptLoading","scriptLoaded","CreateScriptLoader","state","injectScriptTag","doc","url","async","defer","callback","scriptTag","createElement","referrerPolicy","type","id","src","handler","removeEventListener","addEventListener","head","appendChild","load","delay","scriptTagInjection","forEach","fn","push","setTimeout","reinitialize","ScriptLoader"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,SAArB;;AACA,IAAIC,WAAW,GAAG,YAAY;AAAE,SAAQ;AACpCC,IAAAA,SAAS,EAAE,EADyB;AAEpCC,IAAAA,QAAQ,EAAEH,IAAI,CAAC,aAAD,CAFsB;AAGpCI,IAAAA,aAAa,EAAE,KAHqB;AAIpCC,IAAAA,YAAY,EAAE;AAJsB,GAAR;AAK3B,CALL;;AAMA,IAAIC,kBAAkB,GAAG,YAAY;AACjC,MAAIC,KAAK,GAAGN,WAAW,EAAvB;;AACA,MAAIO,eAAe,GAAG,UAAUL,QAAV,EAAoBM,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsD;AACxE,QAAIC,SAAS,GAAGL,GAAG,CAACM,aAAJ,CAAkB,QAAlB,CAAhB;AACAD,IAAAA,SAAS,CAACE,cAAV,GAA2B,QAA3B;AACAF,IAAAA,SAAS,CAACG,IAAV,GAAiB,wBAAjB;AACAH,IAAAA,SAAS,CAACI,EAAV,GAAef,QAAf;AACAW,IAAAA,SAAS,CAACK,GAAV,GAAgBT,GAAhB;AACAI,IAAAA,SAAS,CAACH,KAAV,GAAkBA,KAAlB;AACAG,IAAAA,SAAS,CAACF,KAAV,GAAkBA,KAAlB;;AACA,QAAIQ,OAAO,GAAG,YAAY;AACtBN,MAAAA,SAAS,CAACO,mBAAV,CAA8B,MAA9B,EAAsCD,OAAtC;AACAP,MAAAA,QAAQ;AACX,KAHD;;AAIAC,IAAAA,SAAS,CAACQ,gBAAV,CAA2B,MAA3B,EAAmCF,OAAnC;;AACA,QAAIX,GAAG,CAACc,IAAR,EAAc;AACVd,MAAAA,GAAG,CAACc,IAAJ,CAASC,WAAT,CAAqBV,SAArB;AACH;AACJ,GAhBD;;AAiBA,MAAIW,IAAI,GAAG,UAAUhB,GAAV,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCc,KAAlC,EAAyCb,QAAzC,EAAmD;AAC1D,QAAIc,kBAAkB,GAAG,YAAY;AAAE,aAAOnB,eAAe,CAACD,KAAK,CAACJ,QAAP,EAAiBM,GAAjB,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC,YAAY;AAC9GL,QAAAA,KAAK,CAACL,SAAN,CAAgB0B,OAAhB,CAAwB,UAAUC,EAAV,EAAc;AAAE,iBAAOA,EAAE,EAAT;AAAc,SAAtD;AACAtB,QAAAA,KAAK,CAACF,YAAN,GAAqB,IAArB;AACH,OAH4D,CAAtB;AAGlC,KAHL;;AAIA,QAAIE,KAAK,CAACF,YAAV,EAAwB;AACpBQ,MAAAA,QAAQ;AACX,KAFD,MAGK;AACDN,MAAAA,KAAK,CAACL,SAAN,CAAgB4B,IAAhB,CAAqBjB,QAArB;;AACA,UAAI,CAACN,KAAK,CAACH,aAAX,EAA0B;AACtBG,QAAAA,KAAK,CAACH,aAAN,GAAsB,IAAtB;;AACA,YAAIsB,KAAK,GAAG,CAAZ,EAAe;AACXK,UAAAA,UAAU,CAACJ,kBAAD,EAAqBD,KAArB,CAAV;AACH,SAFD,MAGK;AACDC,UAAAA,kBAAkB;AACrB;AACJ;AACJ;AACJ,GApBD,CAnBiC,CAwCjC;;;AACA,MAAIK,YAAY,GAAG,YAAY;AAC3BzB,IAAAA,KAAK,GAAGN,WAAW,EAAnB;AACH,GAFD;;AAGA,SAAO;AACHwB,IAAAA,IAAI,EAAEA,IADH;AAEHO,IAAAA,YAAY,EAAEA;AAFX,GAAP;AAIH,CAhDD;;AAiDA,IAAIC,YAAY,GAAG3B,kBAAkB,EAArC;AACA,SAAS2B,YAAT","sourcesContent":["/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\nvar createState = function () { return ({\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoading: false,\n    scriptLoaded: false\n}); };\nvar CreateScriptLoader = function () {\n    var state = createState();\n    var injectScriptTag = function (scriptId, doc, url, async, defer, callback) {\n        var scriptTag = doc.createElement('script');\n        scriptTag.referrerPolicy = 'origin';\n        scriptTag.type = 'application/javascript';\n        scriptTag.id = scriptId;\n        scriptTag.src = url;\n        scriptTag.async = async;\n        scriptTag.defer = defer;\n        var handler = function () {\n            scriptTag.removeEventListener('load', handler);\n            callback();\n        };\n        scriptTag.addEventListener('load', handler);\n        if (doc.head) {\n            doc.head.appendChild(scriptTag);\n        }\n    };\n    var load = function (doc, url, async, defer, delay, callback) {\n        var scriptTagInjection = function () { return injectScriptTag(state.scriptId, doc, url, async, defer, function () {\n            state.listeners.forEach(function (fn) { return fn(); });\n            state.scriptLoaded = true;\n        }); };\n        if (state.scriptLoaded) {\n            callback();\n        }\n        else {\n            state.listeners.push(callback);\n            if (!state.scriptLoading) {\n                state.scriptLoading = true;\n                if (delay > 0) {\n                    setTimeout(scriptTagInjection, delay);\n                }\n                else {\n                    scriptTagInjection();\n                }\n            }\n        }\n    };\n    // Only to be used by tests.\n    var reinitialize = function () {\n        state = createState();\n    };\n    return {\n        load: load,\n        reinitialize: reinitialize\n    };\n};\nvar ScriptLoader = CreateScriptLoader();\nexport { ScriptLoader };\n"]},"metadata":{},"sourceType":"module"}