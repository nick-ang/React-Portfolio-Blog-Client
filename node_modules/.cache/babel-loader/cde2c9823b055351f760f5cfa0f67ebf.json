{"ast":null,"code":"class Api {\n  constructor(authToken) {\n    this.headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n    this.BASE_URL = \"/api/articles\";\n    this.authToken = authToken;\n  }\n\n  createHeaders() {\n    return this.authToken ? { ...this.headers,\n      Authorization: \"Bearer \" + this.authToken\n    } : this.headers;\n  }\n\n  async getAll() {\n    return await fetch('http://blogspringbootmysqlkotlin-env.eba-vpdedufk.ap-southeast-2.elasticbeanstalk.com/api/articles', {\n      method: \"GET\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async getById(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"GET\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async delete(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"DELETE\",\n      headers: this.createHeaders()\n    });\n  }\n\n  async update(item) {\n    return await fetch(`${this.BASE_URL}/${item.id}`, {\n      method: \"PUT\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item)\n    });\n  }\n\n  async create(item) {\n    return await fetch(this.BASE_URL, {\n      method: \"POST\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item)\n    });\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/Users/nicholasang/Documents/blog/src/Api.js"],"names":["Api","constructor","authToken","headers","Accept","BASE_URL","createHeaders","Authorization","getAll","fetch","method","getById","id","delete","update","item","body","JSON","stringify","create"],"mappings":"AACA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAIvBC,OAJuB,GAIb;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB;AAFR,KAJa;AAAA,SASvBC,QATuB,GAUrB,eAVqB;AACrB,SAAKH,SAAL,GAAiBA,SAAjB;AACD;;AAUDI,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKJ,SAAL,GACH,EACE,GAAG,KAAKC,OADV;AAEEI,MAAAA,aAAa,EAAE,YAAY,KAAKL;AAFlC,KADG,GAKH,KAAKC,OALT;AAMD;;AAEW,QAANK,MAAM,GAAG;AACb,WAAO,MAAMC,KAAK,CAAC,oGAAD,EAAuG;AACvHC,MAAAA,MAAM,EAAE,KAD+G;AAEvHP,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAF8G,KAAvG,CAAlB;AAID;;AAEY,QAAPK,OAAO,CAACC,EAAD,EAAK;AAChB,WAAO,MAAMH,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGO,EAAG,EAAxB,EAA2B;AAC3CF,MAAAA,MAAM,EAAE,KADmC;AAE3CP,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAFkC,KAA3B,CAAlB;AAID;;AAEW,QAANO,MAAM,CAACD,EAAD,EAAK;AACf,WAAO,MAAMH,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGO,EAAG,EAAxB,EAA2B;AAC3CF,MAAAA,MAAM,EAAE,QADmC;AAE3CP,MAAAA,OAAO,EAAE,KAAKG,aAAL;AAFkC,KAA3B,CAAlB;AAID;;AAEW,QAANQ,MAAM,CAACC,IAAD,EAAO;AACjB,WAAO,MAAMN,KAAK,CAAE,GAAE,KAAKJ,QAAS,IAAGU,IAAI,CAACH,EAAG,EAA7B,EAAgC;AAChDF,MAAAA,MAAM,EAAE,KADwC;AAEhDP,MAAAA,OAAO,EAAE,KAAKG,aAAL,EAFuC;AAGhDU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAH0C,KAAhC,CAAlB;AAKD;;AAEW,QAANI,MAAM,CAACJ,IAAD,EAAO;AACjB,WAAO,MAAMN,KAAK,CAAC,KAAKJ,QAAN,EAAgB;AAChCK,MAAAA,MAAM,EAAE,MADwB;AAEhCP,MAAAA,OAAO,EAAE,KAAKG,aAAL,EAFuB;AAGhCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAH0B,KAAhB,CAAlB;AAKD;;AAzDO;;AA4DV,eAAef,GAAf","sourcesContent":["\nclass Api {\n  constructor(authToken) {\n    this.authToken = authToken;\n  }\n\n  headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  };\n\n  BASE_URL =\n    \"/api/articles\";\n\n  createHeaders() {\n    return this.authToken\n      ? {\n          ...this.headers,\n          Authorization: \"Bearer \" + this.authToken,\n        }\n      : this.headers;\n  }\n\n  async getAll() {\n    return await fetch('http://blogspringbootmysqlkotlin-env.eba-vpdedufk.ap-southeast-2.elasticbeanstalk.com/api/articles', {\n      method: \"GET\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async getById(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"GET\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async delete(id) {\n    return await fetch(`${this.BASE_URL}/${id}`, {\n      method: \"DELETE\",\n      headers: this.createHeaders(),\n    });\n  }\n\n  async update(item) {\n    return await fetch(`${this.BASE_URL}/${item.id}`, {\n      method: \"PUT\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item),\n    });\n  }\n\n  async create(item) {\n    return await fetch(this.BASE_URL, {\n      method: \"POST\",\n      headers: this.createHeaders(),\n      body: JSON.stringify(item),\n    });\n  }\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}