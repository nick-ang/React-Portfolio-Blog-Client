{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers, isBeforeInputEventAvailable, isInDoc } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\n\nvar changeEvents = function () {\n  var _a, _b, _c;\n\n  return ((_c = (_b = (_a = getTinymce()) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE()) ? 'change keyup compositionend setcontent' : 'change input compositionend setcontent';\n};\n\nvar beforeInputEvent = function () {\n  return isBeforeInputEventAvailable() ? 'beforeinput SelectionChange' : 'SelectionChange';\n};\n\nvar Editor =\n/** @class */\nfunction (_super) {\n  __extends(Editor, _super);\n\n  function Editor(props) {\n    var _a, _b, _c;\n\n    var _this = _super.call(this, props) || this;\n\n    _this.rollbackTimer = undefined;\n    _this.valueCursor = undefined;\n\n    _this.rollbackChange = function () {\n      var editor = _this.editor;\n      var value = _this.props.value;\n\n      if (editor && value && value !== _this.currentContent) {\n        editor.undoManager.ignore(function () {\n          editor.setContent(value); // only restore cursor on inline editors when they are focused\n          // as otherwise it will cause a focus grab\n\n          if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n            try {\n              editor.selection.moveToBookmark(_this.valueCursor);\n            } catch (e) {\n              /* ignore */\n            }\n          }\n        });\n      }\n\n      _this.rollbackTimer = undefined;\n    };\n\n    _this.handleBeforeInput = function (_evt) {\n      if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n        if (!_this.inline || _this.editor.hasFocus) {\n          try {\n            // getBookmark throws exceptions when the editor has not been focused\n            // possibly only in inline mode but I'm not taking chances\n            _this.valueCursor = _this.editor.selection.getBookmark(3);\n          } catch (e) {\n            /* ignore */\n          }\n        }\n      }\n    };\n\n    _this.handleBeforeInputSpecial = function (evt) {\n      if (evt.key === 'Enter' || evt.key === 'Backspace' || evt.key === 'Delete') {\n        _this.handleBeforeInput(evt);\n      }\n    };\n\n    _this.handleEditorChange = function (_evt) {\n      var editor = _this.editor;\n\n      if (editor && editor.initialized) {\n        var newContent = editor.getContent();\n\n        if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n          // start a timer and revert to the value if not applied in time\n          if (!_this.rollbackTimer) {\n            _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === 'number' ? _this.props.rollback : 200);\n          }\n        }\n\n        if (newContent !== _this.currentContent) {\n          _this.currentContent = newContent;\n\n          if (isFunction(_this.props.onEditorChange)) {\n            var format = _this.props.outputFormat;\n            var out = format === 'html' ? newContent : editor.getContent({\n              format: format\n            });\n\n            _this.props.onEditorChange(out, editor);\n          }\n        }\n      }\n    };\n\n    _this.handleEditorChangeSpecial = function (evt) {\n      if (evt.key === 'Backspace' || evt.key === 'Delete') {\n        _this.handleEditorChange(evt);\n      }\n    };\n\n    _this.initialise = function (attempts) {\n      var _a, _b, _c;\n\n      if (attempts === void 0) {\n        attempts = 0;\n      }\n\n      var target = _this.elementRef.current;\n\n      if (!target) {\n        return; // Editor has been unmounted\n      }\n\n      if (!isInDoc(target)) {\n        // this is probably someone trying to help by rendering us offscreen\n        // but we can't do that because the editor iframe must be in the document\n        // in order to have state\n        if (attempts === 0) {\n          // we probably just need to wait for the current events to be processed\n          setTimeout(function () {\n            return _this.initialise(1);\n          }, 1);\n        } else if (attempts < 100) {\n          // wait for ten seconds, polling every tenth of a second\n          setTimeout(function () {\n            return _this.initialise(attempts + 1);\n          }, 100);\n        } else {\n          // give up, at this point it seems that more polling is unlikely to help\n          throw new Error('tinymce can only be initialised when in a document');\n        }\n\n        return;\n      }\n\n      var tinymce = getTinymce();\n\n      if (!tinymce) {\n        throw new Error('tinymce should have been loaded into global scope');\n      }\n\n      var finalInit = __assign(__assign({}, _this.props.init), {\n        selector: undefined,\n        target: target,\n        readonly: _this.props.disabled,\n        inline: _this.inline,\n        plugins: mergePlugins((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins),\n        toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar,\n        setup: function (editor) {\n          _this.editor = editor;\n\n          _this.bindHandlers({}); // When running in inline mode the editor gets the initial value\n          // from the innerHTML of the element it is initialized on.\n          // However we don't want to take on the responsibility of sanitizing\n          // to remove XSS in the react integration so we have a chicken and egg\n          // problem... We avoid it by sneaking in a set content before the first\n          // \"official\" setContent and using TinyMCE to do the sanitization.\n\n\n          if (_this.inline && !isTextareaOrInput(target)) {\n            editor.once('PostRender', function (_evt) {\n              editor.setContent(_this.getInitialValue(), {\n                no_events: true\n              });\n            });\n          }\n\n          if (_this.props.init && isFunction(_this.props.init.setup)) {\n            _this.props.init.setup(editor);\n          }\n        },\n        init_instance_callback: function (editor) {\n          var _a, _b; // check for changes that happened since tinymce.init() was called\n\n\n          var initialValue = _this.getInitialValue();\n\n          _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n\n          if (_this.currentContent !== initialValue) {\n            _this.currentContent = initialValue; // same as resetContent in TinyMCE 5\n\n            editor.setContent(initialValue);\n            editor.undoManager.clear();\n            editor.undoManager.add();\n            editor.setDirty(false);\n          }\n\n          var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          editor.setMode(disabled ? 'readonly' : 'design'); // ensure existing init_instance_callback is called\n\n          if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n            _this.props.init.init_instance_callback(editor);\n          }\n        }\n      });\n\n      if (!_this.inline) {\n        target.style.visibility = '';\n      }\n\n      if (isTextareaOrInput(target)) {\n        target.value = _this.getInitialValue();\n      }\n\n      tinymce.init(finalInit);\n    };\n\n    _this.id = _this.props.id || uuid('tiny-react');\n    _this.elementRef = React.createRef();\n    _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n    _this.boundHandlers = {};\n    return _this;\n  }\n\n  Editor.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    var _a, _b;\n\n    if (this.rollbackTimer) {\n      clearTimeout(this.rollbackTimer);\n      this.rollbackTimer = undefined;\n    }\n\n    if (this.editor) {\n      this.bindHandlers(prevProps);\n\n      if (this.editor.initialized) {\n        this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n\n        if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n          // same as resetContent in TinyMCE 5\n          this.editor.setContent(this.props.initialValue);\n          this.editor.undoManager.clear();\n          this.editor.undoManager.add();\n          this.editor.setDirty(false);\n        } else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n          var localEditor_1 = this.editor;\n          localEditor_1.undoManager.transact(function () {\n            // inline editors grab focus when restoring selection\n            // so we don't try to keep their selection unless they are currently focused\n            var cursor;\n\n            if (!_this.inline || localEditor_1.hasFocus()) {\n              try {\n                // getBookmark throws exceptions when the editor has not been focused\n                // possibly only in inline mode but I'm not taking chances\n                cursor = localEditor_1.selection.getBookmark(3);\n              } catch (e) {\n                /* ignore */\n              }\n            }\n\n            var valueCursor = _this.valueCursor;\n            localEditor_1.setContent(_this.props.value);\n\n            if (!_this.inline || localEditor_1.hasFocus()) {\n              for (var _i = 0, _a = [cursor, valueCursor]; _i < _a.length; _i++) {\n                var bookmark = _a[_i];\n\n                if (bookmark) {\n                  try {\n                    localEditor_1.selection.moveToBookmark(bookmark);\n                    _this.valueCursor = bookmark;\n                    break;\n                  } catch (e) {\n                    /* ignore */\n                  }\n                }\n              }\n            }\n          });\n        }\n\n        if (this.props.disabled !== prevProps.disabled) {\n          var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          this.editor.setMode(disabled ? 'readonly' : 'design');\n        }\n      }\n    }\n  };\n\n  Editor.prototype.componentDidMount = function () {\n    var _a, _b, _c, _d, _e, _f;\n\n    if (getTinymce() !== null) {\n      this.initialise();\n    } else if (this.elementRef.current && this.elementRef.current.ownerDocument) {\n      ScriptLoader.load(this.elementRef.current.ownerDocument, this.getScriptSrc(), (_b = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async) !== null && _b !== void 0 ? _b : false, (_d = (_c = this.props.scriptLoading) === null || _c === void 0 ? void 0 : _c.defer) !== null && _d !== void 0 ? _d : false, (_f = (_e = this.props.scriptLoading) === null || _e === void 0 ? void 0 : _e.delay) !== null && _f !== void 0 ? _f : 0, this.initialise);\n    }\n  };\n\n  Editor.prototype.componentWillUnmount = function () {\n    var _this = this;\n\n    var editor = this.editor;\n\n    if (editor) {\n      editor.off(changeEvents(), this.handleEditorChange);\n      editor.off(beforeInputEvent(), this.handleBeforeInput);\n      editor.off('keypress', this.handleEditorChangeSpecial);\n      editor.off('keydown', this.handleBeforeInputSpecial);\n      editor.off('NewBlock', this.handleEditorChange);\n      Object.keys(this.boundHandlers).forEach(function (eventName) {\n        editor.off(eventName, _this.boundHandlers[eventName]);\n      });\n      this.boundHandlers = {};\n      editor.remove();\n      this.editor = undefined;\n    }\n  };\n\n  Editor.prototype.render = function () {\n    return this.inline ? this.renderInline() : this.renderIframe();\n  };\n\n  Editor.prototype.renderInline = function () {\n    var _a = this.props.tagName,\n        tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, {\n      ref: this.elementRef,\n      id: this.id\n    });\n  };\n\n  Editor.prototype.renderIframe = function () {\n    return React.createElement('textarea', {\n      ref: this.elementRef,\n      style: {\n        visibility: 'hidden'\n      },\n      name: this.props.textareaName,\n      id: this.id\n    });\n  };\n\n  Editor.prototype.getScriptSrc = function () {\n    if (typeof this.props.tinymceScriptSrc === 'string') {\n      return this.props.tinymceScriptSrc;\n    } else {\n      var channel = this.props.cloudChannel;\n      var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n      return \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/\" + channel + \"/tinymce.min.js\";\n    }\n  };\n\n  Editor.prototype.getInitialValue = function () {\n    if (typeof this.props.initialValue === 'string') {\n      return this.props.initialValue;\n    } else if (typeof this.props.value === 'string') {\n      return this.props.value;\n    } else {\n      return '';\n    }\n  };\n\n  Editor.prototype.bindHandlers = function (prevProps) {\n    var _this = this;\n\n    if (this.editor !== undefined) {\n      // typescript chokes trying to understand the type of the lookup function\n      configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) {\n        return _this.props[key];\n      }); // check if we should monitor editor changes\n\n      var isValueControlled = function (p) {\n        return p.onEditorChange !== undefined || p.value !== undefined;\n      };\n\n      var wasControlled = isValueControlled(prevProps);\n      var nowControlled = isValueControlled(this.props);\n\n      if (!wasControlled && nowControlled) {\n        this.editor.on(changeEvents(), this.handleEditorChange);\n        this.editor.on(beforeInputEvent(), this.handleBeforeInput);\n        this.editor.on('keydown', this.handleBeforeInputSpecial);\n        this.editor.on('keyup', this.handleEditorChangeSpecial);\n        this.editor.on('NewBlock', this.handleEditorChange);\n      } else if (wasControlled && !nowControlled) {\n        this.editor.off(changeEvents(), this.handleEditorChange);\n        this.editor.off(beforeInputEvent(), this.handleBeforeInput);\n        this.editor.off('keydown', this.handleBeforeInputSpecial);\n        this.editor.off('keyup', this.handleEditorChangeSpecial);\n        this.editor.off('NewBlock', this.handleEditorChange);\n      }\n    }\n  };\n\n  Editor.propTypes = EditorPropTypes;\n  Editor.defaultProps = {\n    cloudChannel: '5'\n  };\n  return Editor;\n}(React.Component);\n\nexport { Editor };","map":{"version":3,"sources":["/Users/nicholasang/code/nick-ang/React-blog/React-Portfolio-Blog-Client/node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","React","ScriptLoader","getTinymce","isFunction","isTextareaOrInput","mergePlugins","uuid","configHandlers","isBeforeInputEventAvailable","isInDoc","EditorPropTypes","changeEvents","_a","_b","_c","Env","browser","isIE","beforeInputEvent","Editor","_super","props","_this","rollbackTimer","undefined","valueCursor","rollbackChange","editor","value","currentContent","undoManager","ignore","setContent","inline","hasFocus","selection","moveToBookmark","e","handleBeforeInput","_evt","getBookmark","handleBeforeInputSpecial","evt","key","handleEditorChange","initialized","newContent","getContent","rollback","window","setTimeout","onEditorChange","format","outputFormat","out","handleEditorChangeSpecial","initialise","attempts","target","elementRef","current","Error","tinymce","finalInit","init","selector","readonly","disabled","plugins","toolbar","setup","bindHandlers","once","getInitialValue","no_events","init_instance_callback","initialValue","clear","add","setDirty","setMode","style","visibility","id","createRef","boundHandlers","componentDidUpdate","prevProps","clearTimeout","localEditor_1","transact","cursor","_i","bookmark","componentDidMount","_d","_e","_f","ownerDocument","load","getScriptSrc","scriptLoading","async","defer","delay","componentWillUnmount","off","keys","forEach","eventName","remove","render","renderInline","renderIframe","tagName","createElement","ref","name","textareaName","tinymceScriptSrc","channel","cloudChannel","apiKey","isValueControlled","wasControlled","nowControlled","on","propTypes","defaultProps","Component"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers, isBeforeInputEventAvailable, isInDoc } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar changeEvents = function () { var _a, _b, _c; return ((_c = (_b = (_a = getTinymce()) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE()) ? 'change keyup compositionend setcontent' : 'change input compositionend setcontent'; };\nvar beforeInputEvent = function () { return isBeforeInputEventAvailable() ? 'beforeinput SelectionChange' : 'SelectionChange'; };\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor(props) {\n        var _a, _b, _c;\n        var _this = _super.call(this, props) || this;\n        _this.rollbackTimer = undefined;\n        _this.valueCursor = undefined;\n        _this.rollbackChange = function () {\n            var editor = _this.editor;\n            var value = _this.props.value;\n            if (editor && value && value !== _this.currentContent) {\n                editor.undoManager.ignore(function () {\n                    editor.setContent(value);\n                    // only restore cursor on inline editors when they are focused\n                    // as otherwise it will cause a focus grab\n                    if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n                        try {\n                            editor.selection.moveToBookmark(_this.valueCursor);\n                        }\n                        catch (e) { /* ignore */ }\n                    }\n                });\n            }\n            _this.rollbackTimer = undefined;\n        };\n        _this.handleBeforeInput = function (_evt) {\n            if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n                if (!_this.inline || _this.editor.hasFocus) {\n                    try {\n                        // getBookmark throws exceptions when the editor has not been focused\n                        // possibly only in inline mode but I'm not taking chances\n                        _this.valueCursor = _this.editor.selection.getBookmark(3);\n                    }\n                    catch (e) { /* ignore */ }\n                }\n            }\n        };\n        _this.handleBeforeInputSpecial = function (evt) {\n            if (evt.key === 'Enter' || evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleBeforeInput(evt);\n            }\n        };\n        _this.handleEditorChange = function (_evt) {\n            var editor = _this.editor;\n            if (editor && editor.initialized) {\n                var newContent = editor.getContent();\n                if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n                    // start a timer and revert to the value if not applied in time\n                    if (!_this.rollbackTimer) {\n                        _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === 'number' ? _this.props.rollback : 200);\n                    }\n                }\n                if (newContent !== _this.currentContent) {\n                    _this.currentContent = newContent;\n                    if (isFunction(_this.props.onEditorChange)) {\n                        var format = _this.props.outputFormat;\n                        var out = format === 'html' ? newContent : editor.getContent({ format: format });\n                        _this.props.onEditorChange(out, editor);\n                    }\n                }\n            }\n        };\n        _this.handleEditorChangeSpecial = function (evt) {\n            if (evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleEditorChange(evt);\n            }\n        };\n        _this.initialise = function (attempts) {\n            var _a, _b, _c;\n            if (attempts === void 0) { attempts = 0; }\n            var target = _this.elementRef.current;\n            if (!target) {\n                return; // Editor has been unmounted\n            }\n            if (!isInDoc(target)) {\n                // this is probably someone trying to help by rendering us offscreen\n                // but we can't do that because the editor iframe must be in the document\n                // in order to have state\n                if (attempts === 0) {\n                    // we probably just need to wait for the current events to be processed\n                    setTimeout(function () { return _this.initialise(1); }, 1);\n                }\n                else if (attempts < 100) {\n                    // wait for ten seconds, polling every tenth of a second\n                    setTimeout(function () { return _this.initialise(attempts + 1); }, 100);\n                }\n                else {\n                    // give up, at this point it seems that more polling is unlikely to help\n                    throw new Error('tinymce can only be initialised when in a document');\n                }\n                return;\n            }\n            var tinymce = getTinymce();\n            if (!tinymce) {\n                throw new Error('tinymce should have been loaded into global scope');\n            }\n            var finalInit = __assign(__assign({}, _this.props.init), { selector: undefined, target: target, readonly: _this.props.disabled, inline: _this.inline, plugins: mergePlugins((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins), toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar, setup: function (editor) {\n                    _this.editor = editor;\n                    _this.bindHandlers({});\n                    // When running in inline mode the editor gets the initial value\n                    // from the innerHTML of the element it is initialized on.\n                    // However we don't want to take on the responsibility of sanitizing\n                    // to remove XSS in the react integration so we have a chicken and egg\n                    // problem... We avoid it by sneaking in a set content before the first\n                    // \"official\" setContent and using TinyMCE to do the sanitization.\n                    if (_this.inline && !isTextareaOrInput(target)) {\n                        editor.once('PostRender', function (_evt) {\n                            editor.setContent(_this.getInitialValue(), { no_events: true });\n                        });\n                    }\n                    if (_this.props.init && isFunction(_this.props.init.setup)) {\n                        _this.props.init.setup(editor);\n                    }\n                }, init_instance_callback: function (editor) {\n                    var _a, _b;\n                    // check for changes that happened since tinymce.init() was called\n                    var initialValue = _this.getInitialValue();\n                    _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n                    if (_this.currentContent !== initialValue) {\n                        _this.currentContent = initialValue;\n                        // same as resetContent in TinyMCE 5\n                        editor.setContent(initialValue);\n                        editor.undoManager.clear();\n                        editor.undoManager.add();\n                        editor.setDirty(false);\n                    }\n                    var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    editor.setMode(disabled ? 'readonly' : 'design');\n                    // ensure existing init_instance_callback is called\n                    if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n                        _this.props.init.init_instance_callback(editor);\n                    }\n                } });\n            if (!_this.inline) {\n                target.style.visibility = '';\n            }\n            if (isTextareaOrInput(target)) {\n                target.value = _this.getInitialValue();\n            }\n            tinymce.init(finalInit);\n        };\n        _this.id = _this.props.id || uuid('tiny-react');\n        _this.elementRef = React.createRef();\n        _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n        _this.boundHandlers = {};\n        return _this;\n    }\n    Editor.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var _a, _b;\n        if (this.rollbackTimer) {\n            clearTimeout(this.rollbackTimer);\n            this.rollbackTimer = undefined;\n        }\n        if (this.editor) {\n            this.bindHandlers(prevProps);\n            if (this.editor.initialized) {\n                this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n                if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n                    // same as resetContent in TinyMCE 5\n                    this.editor.setContent(this.props.initialValue);\n                    this.editor.undoManager.clear();\n                    this.editor.undoManager.add();\n                    this.editor.setDirty(false);\n                }\n                else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n                    var localEditor_1 = this.editor;\n                    localEditor_1.undoManager.transact(function () {\n                        // inline editors grab focus when restoring selection\n                        // so we don't try to keep their selection unless they are currently focused\n                        var cursor;\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            try {\n                                // getBookmark throws exceptions when the editor has not been focused\n                                // possibly only in inline mode but I'm not taking chances\n                                cursor = localEditor_1.selection.getBookmark(3);\n                            }\n                            catch (e) { /* ignore */ }\n                        }\n                        var valueCursor = _this.valueCursor;\n                        localEditor_1.setContent(_this.props.value);\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            for (var _i = 0, _a = [cursor, valueCursor]; _i < _a.length; _i++) {\n                                var bookmark = _a[_i];\n                                if (bookmark) {\n                                    try {\n                                        localEditor_1.selection.moveToBookmark(bookmark);\n                                        _this.valueCursor = bookmark;\n                                        break;\n                                    }\n                                    catch (e) { /* ignore */ }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this.props.disabled !== prevProps.disabled) {\n                    var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    this.editor.setMode(disabled ? 'readonly' : 'design');\n                }\n            }\n        }\n    };\n    Editor.prototype.componentDidMount = function () {\n        var _a, _b, _c, _d, _e, _f;\n        if (getTinymce() !== null) {\n            this.initialise();\n        }\n        else if (this.elementRef.current && this.elementRef.current.ownerDocument) {\n            ScriptLoader.load(this.elementRef.current.ownerDocument, this.getScriptSrc(), (_b = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async) !== null && _b !== void 0 ? _b : false, (_d = (_c = this.props.scriptLoading) === null || _c === void 0 ? void 0 : _c.defer) !== null && _d !== void 0 ? _d : false, (_f = (_e = this.props.scriptLoading) === null || _e === void 0 ? void 0 : _e.delay) !== null && _f !== void 0 ? _f : 0, this.initialise);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        var _this = this;\n        var editor = this.editor;\n        if (editor) {\n            editor.off(changeEvents(), this.handleEditorChange);\n            editor.off(beforeInputEvent(), this.handleBeforeInput);\n            editor.off('keypress', this.handleEditorChangeSpecial);\n            editor.off('keydown', this.handleBeforeInputSpecial);\n            editor.off('NewBlock', this.handleEditorChange);\n            Object.keys(this.boundHandlers).forEach(function (eventName) {\n                editor.off(eventName, _this.boundHandlers[eventName]);\n            });\n            this.boundHandlers = {};\n            editor.remove();\n            this.editor = undefined;\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.renderInline = function () {\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: this.elementRef,\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        return React.createElement('textarea', {\n            ref: this.elementRef,\n            style: { visibility: 'hidden' },\n            name: this.props.textareaName,\n            id: this.id\n        });\n    };\n    Editor.prototype.getScriptSrc = function () {\n        if (typeof this.props.tinymceScriptSrc === 'string') {\n            return this.props.tinymceScriptSrc;\n        }\n        else {\n            var channel = this.props.cloudChannel;\n            var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n            return \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/\" + channel + \"/tinymce.min.js\";\n        }\n    };\n    Editor.prototype.getInitialValue = function () {\n        if (typeof this.props.initialValue === 'string') {\n            return this.props.initialValue;\n        }\n        else if (typeof this.props.value === 'string') {\n            return this.props.value;\n        }\n        else {\n            return '';\n        }\n    };\n    Editor.prototype.bindHandlers = function (prevProps) {\n        var _this = this;\n        if (this.editor !== undefined) {\n            // typescript chokes trying to understand the type of the lookup function\n            configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) { return _this.props[key]; });\n            // check if we should monitor editor changes\n            var isValueControlled = function (p) { return p.onEditorChange !== undefined || p.value !== undefined; };\n            var wasControlled = isValueControlled(prevProps);\n            var nowControlled = isValueControlled(this.props);\n            if (!wasControlled && nowControlled) {\n                this.editor.on(changeEvents(), this.handleEditorChange);\n                this.editor.on(beforeInputEvent(), this.handleBeforeInput);\n                this.editor.on('keydown', this.handleBeforeInputSpecial);\n                this.editor.on('keyup', this.handleEditorChangeSpecial);\n                this.editor.on('NewBlock', this.handleEditorChange);\n            }\n            else if (wasControlled && !nowControlled) {\n                this.editor.off(changeEvents(), this.handleEditorChange);\n                this.editor.off(beforeInputEvent(), this.handleBeforeInput);\n                this.editor.off('keydown', this.handleBeforeInputSpecial);\n                this.editor.off('keyup', this.handleEditorChangeSpecial);\n                this.editor.off('NewBlock', this.handleEditorChange);\n            }\n        }\n    };\n    Editor.propTypes = EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '5'\n    };\n    return Editor;\n}(React.Component));\nexport { Editor };\n"]},"metadata":{},"sourceType":"module"}