{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MoveOut = exports.MoveIn = exports.Move = void 0;\n\nvar interpolation_1 = require(\"../utils/interpolation\");\n\nvar Move = function (dx, dy, outDx, outDy) {\n  if (dx === void 0) {\n    dx = 0;\n  }\n\n  if (dy === void 0) {\n    dy = 100;\n  }\n\n  if (outDx === void 0) {\n    outDx = null;\n  }\n\n  if (outDy === void 0) {\n    outDy = -100;\n  }\n\n  return {\n    in: {\n      style: {\n        transform: function (value) {\n          return \"translate(\" + interpolation_1.SimpleInterpolation(dx, 0, value) + \"px, \" + interpolation_1.SimpleInterpolation(dy, 0, value) + \"px)\";\n        }\n      }\n    },\n    out: {\n      style: {\n        transform: function (value) {\n          return \"translate(\" + interpolation_1.SimpleInterpolation(0, outDx || dx, value) + \"px, \" + interpolation_1.SimpleInterpolation(0, outDy || dy, value) + \"px)\";\n        }\n      }\n    }\n  };\n};\n\nexports.Move = Move;\n\nvar MoveIn = function (dx, dy) {\n  if (dx === void 0) {\n    dx = 0;\n  }\n\n  if (dy === void 0) {\n    dy = 100;\n  }\n\n  return {\n    in: {\n      style: {\n        transform: function (value) {\n          return \"translate(\" + interpolation_1.SimpleInterpolation(dx, 0, value) + \"px, \" + interpolation_1.SimpleInterpolation(dy, 0, value) + \"px)\";\n        }\n      }\n    }\n  };\n};\n\nexports.MoveIn = MoveIn;\n\nvar MoveOut = function (dx, dy) {\n  if (dx === void 0) {\n    dx = 0;\n  }\n\n  if (dy === void 0) {\n    dy = -100;\n  }\n\n  return {\n    out: {\n      style: {\n        transform: function (value) {\n          return \"translate(\" + interpolation_1.SimpleInterpolation(0, dx, value) + \"px, \" + interpolation_1.SimpleInterpolation(0, dy, value) + \"px)\";\n        }\n      }\n    }\n  };\n};\n\nexports.MoveOut = MoveOut;","map":{"version":3,"sources":["/Users/nicholasang/code/nick-ang/Blog:Portfolio/node_modules/react-scroll-motion/dist/animations/MoveAnimation.js"],"names":["Object","defineProperty","exports","value","MoveOut","MoveIn","Move","interpolation_1","require","dx","dy","outDx","outDy","in","style","transform","SimpleInterpolation","out"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveOut = exports.MoveIn = exports.Move = void 0;\nvar interpolation_1 = require(\"../utils/interpolation\");\nvar Move = function (dx, dy, outDx, outDy) {\n    if (dx === void 0) { dx = 0; }\n    if (dy === void 0) { dy = 100; }\n    if (outDx === void 0) { outDx = null; }\n    if (outDy === void 0) { outDy = -100; }\n    return ({\n        in: {\n            style: {\n                transform: function (value) {\n                    return \"translate(\" + interpolation_1.SimpleInterpolation(dx, 0, value) + \"px, \" + interpolation_1.SimpleInterpolation(dy, 0, value) + \"px)\";\n                },\n            },\n        },\n        out: {\n            style: {\n                transform: function (value) {\n                    return \"translate(\" + interpolation_1.SimpleInterpolation(0, outDx || dx, value) + \"px, \" + interpolation_1.SimpleInterpolation(0, outDy || dy, value) + \"px)\";\n                },\n            },\n        },\n    });\n};\nexports.Move = Move;\nvar MoveIn = function (dx, dy) {\n    if (dx === void 0) { dx = 0; }\n    if (dy === void 0) { dy = 100; }\n    return ({\n        in: {\n            style: {\n                transform: function (value) {\n                    return \"translate(\" + interpolation_1.SimpleInterpolation(dx, 0, value) + \"px, \" + interpolation_1.SimpleInterpolation(dy, 0, value) + \"px)\";\n                },\n            },\n        },\n    });\n};\nexports.MoveIn = MoveIn;\nvar MoveOut = function (dx, dy) {\n    if (dx === void 0) { dx = 0; }\n    if (dy === void 0) { dy = -100; }\n    return ({\n        out: {\n            style: {\n                transform: function (value) {\n                    return \"translate(\" + interpolation_1.SimpleInterpolation(0, dx, value) + \"px, \" + interpolation_1.SimpleInterpolation(0, dy, value) + \"px)\";\n                },\n            },\n        },\n    });\n};\nexports.MoveOut = MoveOut;\n"]},"metadata":{},"sourceType":"script"}